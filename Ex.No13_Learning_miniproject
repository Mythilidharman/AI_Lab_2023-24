# Ex.No: 10 Learning – Use Supervised Learning  
### DATE: 13.05.2025                                                                        
### REGISTER NUMBER : 212222040104
### AIM: 
To write a program to train the classifier for Supervised Learning.
###  Algorithm:
Start

Collect data (e.g., area, bedrooms, price)

Clean data (remove/fill missing values)

Select features (e.g., area, bedrooms)

Split data into training and testing sets

Train model using Linear Regression

Predict house prices on test data

Evaluate model (using RMSE, R²)

Display results (predicted vs actual prices)

End


### Program:
```
# AIM: Predict house prices using supervised learning (regression)

# Step 1: Import Libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import numpy as np

# Step 2: Load Dataset
data = pd.read_csv("house_data.csv")  # Make sure this CSV has relevant features like 'area', 'bedrooms', etc.

# Step 3: Preprocessing
data = data.dropna()  # Remove missing values
X = data[['area', 'bedrooms', 'bathrooms']]  # Independent variables
y = data['price']  # Dependent variable

# Step 4: Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Model Training
model = LinearRegression()
model.fit(X_train, y_train)

# Step 6: Prediction
y_pred = model.predict(X_test)

# Step 7: Evaluation
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)

print("Root Mean Squared Error (RMSE):", rmse)
print("R-squared (R²):", r2)
```

### Output:
```
Root Mean Squared Error (RMSE): 45621.87
R-squared (R²): 0.87
```

### Result:
Thus the system was trained successfully and the prediction was carried out.
